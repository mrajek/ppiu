CREATE TABLE `db_users`.`user` (
  `id_user` INT NOT NULL auto_increment,
  `name` VARCHAR(35) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `possition` VARCHAR(50) NOT NULL,
  `gender` ENUM('M', 'K') NOT NULL,
  `email` VARCHAR(65) NOT NULL,
  `login` VARCHAR(50) NOT NULL,
  `password` VARCHAR(50) NOT NULL,
  `active` BIT NOT NULL DEFAULT 1,
  `registaration_date` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id_user`));
  
  CREATE TABLE `db_users`.`role` (
  `id_role` INT NOT NULL,
  `name` VARCHAR(35) NOT NULL,
  PRIMARY KEY (`id_role`));
  
  CREATE TABLE `db_users`.`hash_role` (
  `id_user` INT NOT NULL,
  `id_role`	INT NOT NULL,
  PRIMARY KEY (`id_user`, `id_role`),
  foreign key (`id_user`) references user(`id_user`),
  foreign key (`id_role`) references role(`id_role`));
  
CREATE TABLE `db_users`.`event` (
	`id_event` INT NOT NULL auto_increment,
    `name` VARCHAR(45) NOT NULL,
	`agenda` VARCHAR(150) NOT NULL,
	`termin` DATE NOT NULL,
  PRIMARY KEY (`id_event`));
  
  CREATE TABLE `db_users`.`hash_event` (
  `id_user` INT NOT NULL,
  `id_event` INT NOT NULL,
  `status` VARCHAR(15) NOT NULL default 'waiting',
  `typ_participation` VARCHAR(20) NOT NULL,
  `catering` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id_user`, `id_event`),
  foreign key (`id_user`) references user(`id_user`),
  foreign key (`id_event`) references event(`id_event`));

SELECT u.name FROM user as u INNER JOIN hash_event as he ON u.id_user = he.id_user INNER JOIN event as e ON he.id_event = e.id_event WHERE e.name = "Kurs gotowania";
SELECT * FROM event WHERE name = 'Kurs gotowania';